reduce is a JavaScript array method that takes an array of values and reduces it to a single value by repeatedly applying a function to the elements of the array. It starts with an initial value and accumulates the result of each iteration of the function, ultimately returning a single value.

For example, you could use reduce to sum all the values in an array of numbers:

const numbers = [1, 2, 3, 4, 5];
const sum = numbers.reduce((accumulator, currentValue) => accumulator + currentValue, 0);

console.log(sum); // 15
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Explain :- 
Here, the reduce function starts with an initial value of 0, and for each iteration, it adds the current value to the accumulator. After all iterations, the final value of the accumulator is returned, which is the sum of all the numbers in the array.

Example :- 
const arr = [5, 1, 3, 2, 6];

//sum or max

function findSum (arr)
{
    let sum = 0;
    for (let i = 0; i < arr.length; i++) {
        sum = sum + arr[i];
        
    }

    return sum;
}

console.log(findSum(arr));
-------------------------
output : 17 
-------------------------

How we transform this logic and use reduce instead.

Let's see:-

const arr = [5, 1, 3, 2, 6];

const output = arr.reduce(function(max, curr) {
    if (curr > max) {
        max = curr;
    }
    return max;
},0);

console.log(output);

let me break down the code step by step with a simple explanation:

1. const arr = [5, 1, 3, 2, 6];: This line declares a constant variable arr and initializes it with an array of 5 numbers.

2. const output = arr.reduce(function(max, curr) {: This line declares a constant variable output and initializes it with the result of calling the reduce() method on the arr array. The reduce() method takes a callback function as its argument.

3. if (curr > max) {: Within the callback function, this line checks if the current element curr is greater than the current maximum max.

4. max = curr;: If curr is greater than max, max is updated to curr.

5. return max;: The callback function returns the updated value of max.

6. },0);: The reduce() method is passed an initial value of 0. This is the starting value for max on the first iteration of the reduce() method.

7. console.log(output);: This line logs the final value of output to the console, which should be 6.

8. So, in summary, the code uses the reduce() method to iterate through the elements of the arr array and find the maximum value, which is then stored in the output variable and logged to the console.
